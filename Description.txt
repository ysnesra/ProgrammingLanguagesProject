
CQRS tasarýmý ile MediatR kütüphanesini kullandýðým WebAPI projesidir.
DDD(Domain Dream Development) Tekniði ile Onion Architecture mimarisi kullanýlmýþtýr

Programlama Dilleri ve teknolojilerinin bulunduðu bir uygulamadýr.

Programlama dillerini(C#,Java,Python) ekleyebilecek, silebilecek, güncelleyebilecek, listeleyebilecek, id ile getirebilecek kodlar yazýldý.
  Ýsimler tekrar edemez.
  Programlama dili boþ geçilemez.

1.AÞAMA
  Proje klasör yapýsý oluþturuldu.
  Solution Folder'dan "corePackges" klasörü oluþturuldu. Her projede kullanýlan bu kýsým EnginDemirog'un "devarchitecture" sitesinden hazýr olarak alýndý//githubDan
  DevsProject ksýmýnda da projenin katmanlarý oluþturuldu.Klasör yapýlandýrmalarý yapýldý.

2.AÞAMA
  *Language -> Domain entitysi oluþturuldu.
  *Persistence -> BaseDbContext.cs oluþturuldu.
  *Application -> ILanguageRepository.cs oluþturuldu. Soyut sýnýflar Application katmanýnda
  *Persistence -> LanguageRepository.cs oluþturuldu. Repositoryler(CRUD iþlemleri) Persistence katmanýnda
  *Bütün katmanlar kendi Registirationlarýný (injectionlarýný) kendi halletsin mantýðý ile:
   PersistenceServiceRegistration.cs
   ApplicationServiceRegistration.cs oluþturuldu.Bu servisleri program.cs'ye de ekledim.
  *Veritabaný baðlantýsý için appsettings'e ConnectionString yazýldý
  *CodeFirst yapýsý ile migration yapýlarak ProgrammingLanguagesDb databasei oluþturuldu.

3.AÞAMA
  Application katmanýnda Features klasöründe -> Command ve Query operasyonlarý ayrýldý. 
  Command kýsmý kodlandý.
    *Application katmanýna -> AutoMapper ve MediatR kütüphaneleri eklendi.
    *CreateLanguageCommand.cs clasý oluþturuldu.MediatR handle iþleminin gerçekleþtiði class
    *MappingProfiles.cs clasýnda neyi neyle mapleyeceði yazýldý
 
  Bütün Contollerlar da MediatR kullanýlacaðýndan; BaseController oluþturulup diðer Controllerlara kalýtým verildi.
  BusinessRules Kýsmý:
    *LanguageBusinessRules.cs clasýnda "Ýsimler tekrar edemez" ve "Programlama dili boþ geçilemez" kurallarý yazýldý.
     Command kýsmýna kuralýmýz eklendi.
     ApplicationServiceRegistration.cs ye LanguageBusinessRules eklendi. 

4.AÞAMA
   Query kýsmý kodlandý.
     *GetListLanguageQuery.cs clasý oluþturuldu.
     *Controllerda GetList metotuyla MediatR a  GetlistLanguageQuery yollandý

   Fluent Validation uygulandý.
   Eklerken,güncellerken programlamadili ismi boþ olmamalý ve en az iki karakter olmalýdýr.(CreateLanguageCommandValidator.cs ve UpdateLanguageCommandValidator.cs)
   GetById ye göre tek bir data getirirkende geçersiz Id girme ihtimalinde karþý validation yazýldý (GetByIdLanguageQueryValidator.cs)
